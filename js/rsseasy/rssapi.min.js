/// <reference path="jquery.min.js" />
/// <reference path="../data/dictdata.js" />
/// <reference path="rsseasy.min.js" />
/// <reference path="validated.v2.min.js" />
/// <reference path="rsseasy.app.js" />
/// <reference path="rsseasy.adapter.min.js" />
/// <reference path="rsseasy.order.min.js" />
/// <reference path="rsseasy.pay.min.js" />
/// <reference path="rsseasy.popup.min.js" />

var RssApi = {}
//获取数据列表（通过视图）
RssApi.List = function (marker) {
    return new Ajax("rss/list/" + marker);
}
//获取详情
RssApi.Details = function (marker) {
    return new Ajax("rss/details/" + marker);
}
//编辑
RssApi.Edit = function (marker) {
    return new Ajax("rss/edit/" + marker);
}
//删除
RssApi.Delete = function (marker) {
    return new Ajax("rss/delete/" + marker);
}
//点赞
RssApi.Praise = function (marker) {
    return new Ajax("rss/praise/" + marker);
}
//置顶
RssApi.Top = function (marker) {
    return new Ajax("rss/top/" + marker);
}
//热门
RssApi.Hot = function (marker) {
    return new Ajax("rss/hot/" + marker);
}
//用户配置
RssApi.UserConfig = {}
RssApi.UserConfig.Edit = function (marker) {
    return new Ajax("rss/user/config/edit/" + marker);
}
RssApi.UserConfig.Details = function (marker) {
    return new Ajax("rss/user/config/details/" + marker);
}

//关注
RssApi.Attention = {}
RssApi.Attention.List = function (marker) {
    return new Ajax("rss/attention/list/" + marker);
}
RssApi.Attention.Edit = function (marker) {
    return new Ajax("rss/attention/edit/" + marker);
}
//关注详情
RssApi.Attention.Details = function (marker) {
    return new Ajax("rss/attention/details/" + marker);
}

//购买详情
RssApi.Buy = {}
RssApi.Buy.List = function (marker) {
    return new Ajax("rss/buy/list/" + marker);
}

//获取详情
RssApi.Buy.Details = function (marker) {
    return new Ajax("rss/buy/details/" + marker);
}

//验证是否购买
RssApi.Buy.Verify = function (marker) {
    return new Ajax("rss/buy/verify/" + marker);
}

//评论模块
RssApi.Comment = {}
RssApi.Comment.List = function (marker) {
    return new Ajax("rss/comment/list/" + marker);
}
//评论查看
RssApi.Comment.Details = function (marker) {
    return new Ajax("rss/comment/details/" + marker);
}
//评论增加
RssApi.Comment.Append = function (marker) {
    return new Ajax("rss/comment/append/" + marker);
}
//评论点赞
RssApi.Comment.Praise = function (marker) {
    return new Ajax("rss/comment/praise/" + marker);
}
//评论回复
RssApi.Comment.Reply = function (marker) {
    return new Ajax("rss/comment/reply/" + marker);
}

//直接视图查询操作；参数myid,获取指定用户的数据
RssApi.View = {}
RssApi.View.List = function (marker) {
    return new Ajax("rss/view/list/" + marker);
}
RssApi.View.Details = function (marker) {
    return new Ajax("rss/view/details/" + marker);
}

//直接表查询操作；参数myid,获取指定用户的数据
RssApi.Table = {}
RssApi.Table.List = function (marker) {
    return new Ajax("rss/table/list/" + marker);
}
RssApi.Table.Details = function (marker) {
    return new Ajax("rss/table/details/" + marker);
}

//模块module：模块名称
function RssModule(module) {
    return {
        "Module": module,
        "RssTable": new RssTable(module),
        "List": { "List": RssApi.List(module), "Edit": RssApi.Edit(module), "Delete": RssApi.Delete(module), "Praise": RssApi.Praise(module), "Top": RssApi.Top(module), "Hot": RssApi.Hot(module), "Table": RssApi.Table.List(module), "View": RssApi.View.List(module) },
        "Details": { "Table": RssApi.Table.Details(module), "View": RssApi.View.Details(module) },
        "Attention": { "Edit": RssApi.Attention.Edit(module), "List": RssApi.Attention.List(module), "Details": RssApi.Attention.Details(module) },
        "UserConfig": { "Edit": RssApi.UserConfig.Edit(module), "Details": RssApi.UserConfig.Details(module) },
        "Comment": {
            "List": RssApi.Comment.List(module), "Details": RssApi.Comment.Details(module), "Append": RssApi.Comment.Append(module)
        },
        "DataParse": {},
        "BindHtml": function (wrap, json, parse) {
            wrap.mapview(json, $.extend(null, RssDict.DataParse, this.DataParse));
        }
    }
}


//关注
$("section").on("click", "[rssattention]", function () {
    var t = $(this), module = t.attr("rssattention"), dataid = t.attr("relationid");
    RssApi.Attention.Edit(module).keyvalue("relationid", dataid).keymyid().getJson(function (json) {
        t.attr("isattention", json["result"]);
    });
})
//点赞
$("section").on("click", "[rsspraise]", function () {
    var t = $(this), module = t.attr("rsspraise"), dataid = t.attr("relationid") || "";
    RssApi.Praise(module).keyvalue("relationid", dataid).keymyid().getJson(function (json) {
        t.attr("ispraise", json["result"]).html(parseInt(t.html()) + (json["result"] ? +1 : -1));
    });
})

//聚易购买模块，支付与订单合并
var RssBuy = {}
RssBuy.App = function (t, module) {
	
    try {
        RssOrder.addDetails(RssOrderDetails.create(RssApp.Module[module], t.attr("relationid"), t.attr("title"), t.attr("price")));
        RssPopup.onSelect = function (payjson) {

            //通过创建订单详情方法创建一个订单并增加到订单详情
            RssOrder.onGetOrder = function (json) {
                RssOrderDetails.clear();
                RssPay.onSucceed = function () {
                    if (RssPay.Module[module]) {
                        RssPay.Module[module].call(t);
                    }
                }
                RssPay.PayData.channelid = payjson["key"];
                RssPay.PayData.orderid = json["orderid"];
                RssPay.Submit();
            }
            RssOrder.submit();
        }

        RssPopup.SetTitle("选择支付方式").BindDict({ "1": "支付宝", "4": "微信", "8": "支付宝H5" }).Popup();
    } catch (ex) {
        RssCode.alert(ex);
    }
}

//直接购买按钮
$("section").on("click", "[rssbuy]", function () {
    var t = $(this), module = t.attr("rssbuy");
    RssBuy.App(t, module);
})

//详情
$("[rssdetails]").on("click", "li", function () {
    var t = $(this), pt = t.parent(), dataid = t.attr("dataid");
});