/// <reference path="jquery.min.js" />
/// <reference path="sqlitehelper.js" />
/// <reference path="rsseasy.min.js" />
/// <reference path="validated.v2.min.js" />
/// <reference path="rsseasy.pay.min.js" />
/// <reference path="validated.v3.min.js" />

//订单及购物车
var RssBuyCar = new RssTable("buycar"), RssOrder = new RssTable("order"), RssOrderDetails = new RssTable("orderdetails");
//设置订单表
RssOrder.setHeader(["addrid", "invoiceid", "warehouseid"]);

//设置订单详情表
RssOrderDetails.setHeader(["moduleid", "relationid", "name", "amount", "unitintegral", "totalintegral", "unitprice", "totalprice", "discountsum", "payamount"]);
RssOrderDetails.create = function (moduleid, relationid, name, unitprice, amount) {
    return { "moduleid": moduleid, "relationid": relationid, "name": name, "amount": amount || 1, "unitprice": unitprice }
}

RssOrder.Calculate = function (details) {
    details["amount"] = details["amount"] || 1;
    details["totalprice"] = details["amount"] * (details["unitprice"] || 0);
    details["totalintegral"] = details["amount"] * (details["unitintegral"] || 0);
    details["payamount"] = details["totalprice"] - (details["discountsum"] || 0);
    return details;
}
RssOrder.UpdateDetails = function (details, rowidx) {
    RssOrderDetails.updatetRow(this.Calculate(details), rowidx)
    this.UpdateRow();
    return this;
}
RssOrder.onUpdateDetails = function () {

}
RssOrder.addDetails = function (details) {
    ValidatedV3.setdict(details).isNumber("moduleid", "222").isNumber("relationid", 223).isMoney("unitprice");

    //验证订单中商品是否存在
    while (RssOrderDetails.for_in_row()) {
        if (RssOrderDetails.get("relationid") == details["relationid"]) {
            return this;
        }
    }
    RssOrderDetails.addRow(this.Calculate(details));
    this.UpdateRow();
    return this;
}
RssOrder.UpdateRow = function () {
    var fee = 0;
    while (RssOrderDetails.for_in_row()) {
        fee += RssOrderDetails.get("payamount");
    }
    RssOrder.dict.fee = fee;
    this.onUpdateDetails();
    return this;
}

//当订单提交服务器前返回订单ID，可结合支付模块进行订单支付；
RssOrder.onGetOrder = function (json) {

}
//提交订单数据到服务器端
RssOrder.submit = function () {
    try {
        //ValidatedV2.dictset(RssOrder.dict).keyset("moduleid").isNumber().keyset("fee").isMoney().keyset("addrid").isNumber();

        RssOrder.keyvalue("deviceid", RssEasy.Deviceid);

        var details = RssOrderDetails.copy(["moduleid", "relationid", "name", "amount", "unitintegral", "unitprice", "discountsum"]);

        console.log(details);

        if (details.rows.length == 0) {
            RssCode.alert("221");
            return;
        }

        new Ajax("order/append").keyvalue("order", RssOrder.toJson()).keyvalue("myid", RssUser.Data.myid).keyvalue("details", details.toKeyValue()).setType("json").post(function (json) {
            RssOrder.onGetOrder(json);
        });
    }
    catch (ex) {
        RssCode.alert(ex, ValidatedV2.key);
    }
}
