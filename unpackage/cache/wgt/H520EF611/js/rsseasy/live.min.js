/// <reference path="jquery.min.js" />
/// <reference path="sqlitehelper.js" />
/// <reference path="rsseasy.min.js" />

//在线直播
var RssLive = {}
RssLive.Pusher = {}
RssLive.Pusher.Url = {}
RssLive.Pusher.Params = {}
RssLive.Pusher.Start = function (url) {
    this.Action = "start";
    this.Params = { "url": url };
    return this.Submit();
}
RssLive.Pusher.Action = "launch";
//启动
RssLive.Pusher.Launch = function (url) {
    this.Action = "launch";
    this.Params = { "url": url };
    return this.Submit();
}
RssLive.Pusher.Preview = function () {
    this.Action = "preview";
    return this.Submit();
}
RssLive.Pusher.Stop = function () {
    this.Action = "stop";
    return this.Submit();
}
//必须在预览成功或推流成功或暂停推流时才能调用，此时sdk不会停止对音频的采集，如不需要采集，需要调用 静音接口 setMute(true/false)。
RssLive.Pusher.Pause = function () {
    this.Action = "pause";
    return this.Submit();
}
//必须在推流暂停状态下才能调用。
RssLive.Pusher.Resume = function () {
    this.Action = "resume";
    return this.Submit();
}
//必须在推流状态下或者sdk返回错误时，才能调用。
RssLive.Pusher.ReStartPush = function () {
    this.Action = "restartpush";
    return this.Submit();
}
//必须在预览或者推流成功后才能调用。
RssLive.Pusher.SetMute = function (state) {
    this.Action = "setmute";
    this.Params = { "mute": state }
    return this.Submit();
}
RssLive.Pusher.SetBeautyLevel = function (level) {
    this.Action = "beautylevel";
    this.Params = { "level": level }
    return this.Submit();
}
RssLive.Pusher.Degree = { "D0": "ORIENTATION_PORTRAIT", "D90": "ORIENTATION_LANDSCAPE_HOME_RIGHT", "D270": "ORIENTATION_LANDSCAPE_HOME_LEFT" }
RssLive.Pusher.SetOrientation = function (degree) {
    this.Action = "setorientation";
    this.Params = { "degree": degree || this.Degree.D90 }
    return this.Submit();
}
RssLive.Pusher.Submit = function () {
    var params = { "adapter": "Live", "action": this.Action }
    $.extend(params, this.Params || {});
    JsAdapter.Push(params).Submit();
}
RssLive.Player = {}
RssLive.Player.Url = RssApp.LiVeUrl;
RssLive.Player.Params = {}
RssLive.Player.Action = "play";
RssLive.Player.Play = function (url) {
    this.Action = "play";
    this.Params["url"] = url;
    return this.Submit();
}
RssLive.Player.RePlay = function () {
    this.Action = "replay";
    return this.Submit();
}
RssLive.Player.Submit = function () {
    var params = { "adapter": "Player", "action": this.Action }
    $.extend(params, this.Params || {});
    JsAdapter.Push(params).Submit();
}
RssLive.onPrepared = function (json) {

}
RssLive.onCompleted = function (json) {

}
RssLive.onStopped = function (json) {

}
RssLive.onError = function (json) {
}
RssLive.onPcmData = function (json) {
}
RssLive.onFullScreen = function (json) {
}